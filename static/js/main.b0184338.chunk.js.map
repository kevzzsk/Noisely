{"version":3,"sources":["assets/Album.jpeg","context.js","components/AppBar.js","components/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","getTrackList","axios","get","process","then","res","data","message","body","map","each_t","i","track","console","log","track_name","split","artist_name","getAlbumCover","catch","err","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","sent","keys","response","hits","abrupt","result","song_art_image_thumbnail_url","stop","_x","inherits","createClass","key","value","prevProps","prevState","_this2","new_list","react_default","createElement","props","children","Component","Consumer","AppBar","refreshPage","e","toggle","bind","assertThisInitialized","isOpen","react_router_dom","to","className","onClick","id","components_Spinner","style","flex","marginLeft","justifyContent","alignItems","Spinner","color","alignSelf","Track","album_art","cover","hasOwnProperty","album_cover_art","_this3","src","alt","album_name","track_id","Tracks","undefined","Fragment","item","tracks_Track","Search","trackTitle","onChange","defineProperty","target","name","findTrack","preventDefault","onSubmit","placeholder","Index","tracks_Search","tracks_Tracks","Lyrics","lyrics","getLyrics","match","params","_this$state","lyrics_body","App","context_Provider","AppBar_AppBar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0184338.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Album.ed77ed81.jpeg\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_TRACKS\":\r\n      return {\r\n        ...state,\r\n        track_list: action.payload,\r\n        heading: \"Search Results\"\r\n      };\r\n    case \"REFRESH_PAGE\":\r\n      return {\r\n        ...state,\r\n        heading: \"Top 10 Tracks\",\r\n        track_list: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    track_list: [],\r\n    heading: \"Top 10 Tracks\",\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  getTrackList = () => {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=sg&f_has_lyrics=1&apikey=${\r\n          process.env.REACT_APP_MM_KEY\r\n        }`\r\n      )\r\n      .then(res => {\r\n        res.data.message.body.track_list.map((each_t, i) => {\r\n          const { track } = each_t;\r\n          console.log(\r\n            `Getting ${track.track_name.split(\"-\")[0]} ${\r\n              track.artist_name.split(\"feat\")[0]\r\n            }..`\r\n          );\r\n          track[\"album_cover_art\"] = this.getAlbumCover(\r\n            `${track.track_name.split(\"-\")[0]} ${\r\n              track.artist_name.split(\"feat\")[0]\r\n            }`\r\n          );\r\n          return track;\r\n        });\r\n        this.setState({\r\n          track_list: res.data.message.body.track_list\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  getAlbumCover = async query => {\r\n    let res = await axios.get(\r\n      `https://cors-anywhere.herokuapp.com/https://api.genius.com/search?q=${query}&access_token=${\r\n        process.env.REACT_APP_GENIUS_TOKEN\r\n      }`\r\n    );\r\n    if (Object.keys(res.data.response.hits).length === 0) {\r\n      //console.log(`no album art found! for ${query}`);\r\n      return \"\";\r\n    } else {\r\n      // return album cover art url\r\n      return res.data.response.hits[0].result.song_art_image_thumbnail_url;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getTrackList();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // check if track_list is updated.\r\n    // if true, get album cover for updated list\r\n    console.log(\"PROVIDER UPDATE\");\r\n    if (prevState.track_list !== this.state.track_list) {\r\n      if (Object.keys(this.state.track_list).length !== 0) {\r\n        const new_list = this.state.track_list;\r\n        new_list.map((each_t, i) => {\r\n          const { track } = each_t;\r\n          console.log(\r\n            `Getting ${track.track_name.split(\"-\")[0]} ${\r\n              track.artist_name.split(\"feat\")[0]\r\n            }..`\r\n          );\r\n          track[\"album_cover_art\"] = this.getAlbumCover(\r\n            `${track.track_name.split(\"-\")[0]} ${\r\n              track.artist_name.split(\"feat\")[0]\r\n            }`\r\n          );\r\n          return track;\r\n        });\r\n        console.log(new_list);\r\n        this.setState({\r\n          track_list: new_list\r\n        });\r\n      }else {\r\n        this.getTrackList();\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport \"./AppBar.css\";\r\nimport { Consumer } from \"../context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AppBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  refreshPage = (dispatch, e) => {\r\n    console.log(\"REFRESH PAGE\");\r\n    dispatch({\r\n      type: \"REFRESH_PAGE\",\r\n      payload: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <Link to=\"/\" className=\"text-decoration-none\">\r\n              <nav\r\n                className=\"navbar navbar-dark bg-dark mb-5\"\r\n                onClick={this.refreshPage.bind(this, dispatch)}\r\n              >\r\n                <span className=\"navbar-brand mb-0 h1 mx-auto\" id=\"navbar\">\r\n                  Noisely\r\n                </span>\r\n              </nav>\r\n            </Link>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div style={{flex:1, marginLeft:'47%', justifyContent:'center',alignItems:'center'}}>\r\n      <Spinner\r\n        color=\"dark\"\r\n        style={{ flex: 1, alignSelf: \"center\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cover from \"../../assets/Album.jpeg\";\r\n\r\nclass Track extends Component {\r\n  state = {\r\n    album_art: cover\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Track Mounted!\");\r\n    console.log(this.props.track.hasOwnProperty(\"album_cover_art\"));\r\n    if (this.props.track.hasOwnProperty(\"album_cover_art\")) {\r\n      this.props.track.album_cover_art.then(res => {\r\n        this.setState({ album_art: res === \"\" ? cover : res });\r\n        console.log(res);\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps !== this.props) {\r\n      if (this.props.track.hasOwnProperty(\"album_cover_art\")) {\r\n        this.props.track.album_cover_art.then(res => {\r\n          this.setState({ album_art: res === \"\" ? cover : res });\r\n          console.log(res);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { track } = this.props;\r\n    return (\r\n      <div className=\"col-md-2dot4 h-100\">\r\n        <div className=\"card mb-4 shadow-sm\">\r\n          <div className=\"img-container\">\r\n            <img\r\n              className=\"card-img rounded-0\"\r\n              src={this.state.album_art}\r\n              alt=\"card img\"\r\n            />\r\n          </div>\r\n          <div className=\"card-body d-flex flex-column\">\r\n            <h5 className=\"track-name\">{track.track_name}</h5>\r\n            <p className=\"card-text text-truncate\">\r\n              <strong>\r\n                <i className=\"fas fa-user\" /> Artist\r\n              </strong>\r\n              : {track.artist_name}\r\n              <br />\r\n              <strong>\r\n                <i className=\"fas fa-compact-disc\" /> Album\r\n              </strong>\r\n              : {track.album_name}\r\n            </p>\r\n            <Link\r\n              to={`lyrics/track/${track.track_id}`}\r\n              className=\"btn btn-dark btn-block mt-auto\"\r\n            >\r\n              <i className=\"fas fa-chevron-right\" /> View Lyrics\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nimport Spinner from \"../Spinner\";\r\nimport Track from './Track';\r\n\r\nclass Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { track_list,heading } = value;\r\n          console.log(value);\r\n          if (track_list === undefined || track_list.length === 0) {\r\n            return <Spinner />;\r\n          } else {\r\n            return (\r\n              <>\r\n                <h3 className=\"text-center mb-4\" >{heading}</h3>\r\n                <div className=\"row\" >\r\n                    {track_list.map((item)=>(\r\n                        <Track key={item.track.track_id} track={item.track}/>\r\n                    ))}\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    trackTitle: \"\"\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  findTrack = (dispatch, e) => {\r\n    e.preventDefault();\r\n    if (this.state.trackTitle !== \"\") {\r\n      axios\r\n        .get(\r\n          `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${\r\n            this.state.trackTitle\r\n          }&page_size=10&page=1&s_track_rating=desc&apikey=${\r\n            process.env.REACT_APP_MM_KEY\r\n          }`\r\n        )\r\n        .then(res => {\r\n          console.log(res.data);\r\n          dispatch({\r\n            type: \"SEARCH_TRACKS\",\r\n            payload: res.data.message.body.track_list\r\n          });\r\n\r\n          this.setState({ trackTitle: \"\" });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-4 p-4\" id=\"searchbar\">\r\n              <h1 className=\"display-4 text-center\">Search For A Song</h1>\r\n              <p className=\"lead text-center\">Get Lyrics for any song</p>\r\n              <form onSubmit={this.findTrack.bind(this, dispatch)}>\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group col-md-11 mb-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Song Title...\"\r\n                      name=\"trackTitle\"\r\n                      value={this.state.trackTitle}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-auto\">\r\n                    <button className=\"btn btn-outline-dark btn-lg rounded-circle\">\r\n                      <i className=\"fas fa-search\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport Tracks from './tracks/Tracks'\r\nimport Search from './tracks/Search'\r\n\r\nconst Index = () => {\r\n    return (\r\n        <>\r\n            <Search />\r\n            <Tracks />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Lyrics extends Component {\r\n  state = {\r\n    track: {},\r\n    lyrics: {}\r\n  };\r\n\r\n  getLyrics = () => {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${\r\n          this.props.match.params.id\r\n        }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n      )\r\n      .then(res => {\r\n        //console.log(res.data);\r\n        this.setState({\r\n          lyrics: res.data.message.body.lyrics\r\n        });\r\n        return axios.get(\r\n          `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${\r\n            this.props.match.params.id\r\n          }&apikey=${process.env.REACT_APP_MM_KEY}`\r\n        );\r\n      })\r\n      .then(res => {\r\n        this.setState({ track: res.data.message.body.track });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getLyrics();\r\n  }\r\n\r\n  render() {\r\n    const { track, lyrics } = this.state;\r\n\r\n    if (\r\n      track === undefined ||\r\n      lyrics === undefined ||\r\n      Object.keys(track).length === 0 ||\r\n      Object.keys(lyrics).length === 0\r\n    ) {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\r\n            Go Back\r\n          </Link>\r\n          <div className=\"card\">\r\n            <h5 className=\"card-header\">\r\n              {track.track_name}\r\n              <span className=\"text-secondary\"> by </span>{\" \"}\r\n              <span className=\"text-secondary\">{track.artist_name}</span>\r\n            </h5>\r\n            <div className=\"card-body lyrics\">\r\n                <p className=\"card-text lyrics\">{lyrics.lyrics_body}</p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"./context\";\r\n\r\nimport AppBar from \"./components/AppBar\";\r\nimport Index from \"./components/Index\";\r\nimport Lyrics from \"./components/tracks/Lyrics\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Router>\r\n        <div className=\"bg-container\" id=\"bg-dark\">\r\n          <AppBar />\r\n          <div className=\"container-fluid\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Index} />\r\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}